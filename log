/* schemeOTP log



Version 2.2     Set bounds on user seed entry for  extra input safety  (if users
                typed garbage, remaining are skipped and RNG got zeros.) Updated
                "How to run/executable with g++."  Aesthetics: file overwriting.
                Added reminder of time to wait after seed entry.
                Wednesday, April 21 2021

Version 2.1     Good key file overwriting (all zeros then all ones.) Small improvements/safety.
                Thursday, January 14 2021

Version 2       Automatic file size handling. Appending randomness if plainfile < 1MB.
                Error if no input files present or >1MB/empty. 1MB file size max, 1 byte min.
                Follows structure of all my other latest OTPs where each key scraped is
                twice the needed amount so as to append randomness in order to ensure
                cipherfile is always 1MB. No accommodation key needed. Less clutter and
                no requirement of choosing key quantities to generate. As always, remains
                dual-channel so each party can send a fixed number of cipherfiles without
                order/timing interruptions or ambiguities (channels are separate but
                symmetrically entangled.) Did I mention speed? This one is femtosecond.
                Introducing two C++ functions built in to C++: .fail and .eof. It is against
                my core values to overwhelm the noob auditor, however, these functions greatly
                reduce the code and are quickly-intuitive as compared to lengthy key truncating
                and sketchy size calcs in version 1. Unspecified behavior is unlikely. Keys are
                used whole (nothing to truncate, only deplete.) Option to swap channels remains.
                Everything nicely cleaned up, removed 400 lines through this polish. +safety.
                Friday, January 01 2021

Version 1       Never officially released. Massive capabilities but no audit-friendliness.
                This spaghetti version was slow but did not waste a single byte worth of keys.
                Let's be real, users of this program need only send official documents
                segmented or far less than 1MB in size. */
